{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\tony.fong\\\\source\\\\react-course\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.util.js\";\nexport function* getSnapshotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const user = yield getCurrentUser();\n    if (!user) return;\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession)]);\n}","map":{"version":3,"sources":["C:\\Users\\tony.fong\\source\\react-course\\crwn-clothing\\src\\redux\\user\\user.sagas.js"],"names":["all","call","put","takeLatest","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","user","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","SignInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,EAIEC,cAJF,QAKO,iCALP;AAOA,OAAO,UAAUC,uBAAV,CAAkCC,IAAlC,EAAwC;AAC7C,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACG,aAAa;AAAGW,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACI,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AAAA,iBACe,MAAMZ,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CADrB;AAAA,UACMI,IADN,QACMA,IADN;;AAEF,UAAMD,uBAAuB,CAACC,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOM,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACmB,aAAa,CAACH,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AAAA,kBACe,MAAMlB,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACMb,IADN,SACMA,IADN;;AAEF,UAAMD,uBAAuB,CAACC,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOM,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACmB,aAAa,CAACH,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMf,IAAI,GAAG,MAAMF,cAAc,EAAjC;AACA,QAAG,CAACE,IAAJ,EAAU;AACV,UAAMD,uBAAuB,CAACC,IAAD,CAA7B;AACD,GAJD,CAIE,OAAMM,KAAN,EAAa;AACb,UAAMhB,GAAG,CAACmB,aAAa,CAACH,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUU,mBAAV,GAAgC;AACrC,QAAMzB,UAAU,CAACC,eAAe,CAACyB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUW,kBAAV,GAA+B;AACpC,QAAM3B,UAAU,CAACC,eAAe,CAAC2B,mBAAjB,EAAsCT,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUU,kBAAV,GAA+B;AACpC,QAAM7B,UAAU,CAACC,eAAe,CAAC6B,kBAAjB,EAAqCN,mBAArC,CAAhB;AACD;AAED,OAAO,UAAUO,SAAV,GAAsB;AAC3B,QAAMlC,GAAG,CAAC,CAACC,IAAI,CAAC2B,mBAAD,CAAL,EAA4B3B,IAAI,CAAC6B,kBAAD,CAAhC,EAAsD7B,IAAI,CAAC+B,kBAAD,CAA1D,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport UserActionTypes from \"./user.types\";\r\nimport { signInSuccess, signInFailure } from \"./user.actions\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser\r\n} from \"../../firebase/firebase.util.js\";\r\n\r\nexport function* getSnapshotFromUserAuth(user) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const user = yield getCurrentUser();\r\n    if(!user) return;\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch(error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}