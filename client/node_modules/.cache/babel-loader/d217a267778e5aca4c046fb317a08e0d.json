{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tony.fong\\\\source\\\\react-course\\\\crwn-clothing\\\\src\\\\page\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../../page/collection/collection.component\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.util\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collections\");\n    fetch('https://firestore.googleapis.com/v1/projects/crwn-1769f/databases/(default)/documents/collections').then(response => response.json()).then(collections => console.log(collections));\n    this.unsubscribeFromSnapShot = collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionName\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\tony.fong\\source\\react-course\\crwn-clothing\\src\\page\\shop\\shop.component.jsx"],"names":["React","Route","connect","WithSpinner","CollectionOverview","CollectionPage","updateCollections","firestore","convertCollectionSnapshotToMap","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapShot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","get","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SACEC,SADF,EAEEC,8BAFF,QAGO,8BAHP;AAKA,MAAMC,6BAA6B,GAAGN,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGP,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVV,iBADU,GACY,KAAKW,KADjB,CACVX,iBADU;AAElB,UAAMY,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,mGAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EACiCF,IADjC,CACsCG,WAAW,IAAGC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CADpD;AAGA,SAAKT,uBAAL,GAA+BG,aAAa,CAACS,GAAd,GAAoBN,IAApB,CAAyBO,QAAQ,IAAI;AAClE,YAAMC,cAAc,GAAGrB,8BAA8B,CAACoB,QAAD,CAArD;AACAtB,MAAAA,iBAAiB,CAACuB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAChB,QAAAA,OAAO,EAAG;AAAX,OAAd;AAAkC,KAHL,CAA/B;AAKD;;AAEDiB,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKf,KADhB,CACCe,KADD;AAAA,UAEClB,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;AAIP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKkB,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGhB,KAAD,IAAY,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKe,KAAK,CAACC,IAAX,qBADN;AAEE,MAAA,MAAM,EAAGhB,KAAD,IAAY,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAlCoC;;AAqCvC,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtC7B,EAAAA,iBAAiB,EAAEuB,cAAc,IAC/BM,QAAQ,CAAC7B,iBAAiB,CAACuB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAe3B,OAAO,CACpB,IADoB,EAEpBgC,kBAFoB,CAAP,CAGbvB,QAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../../page/collection/collection.component\";\r\n\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionSnapshotToMap\r\n} from \"../../firebase/firebase.util\";\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n\r\n  unsubscribeFromSnapShot = null;\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    \r\n    fetch('https://firestore.googleapis.com/v1/projects/crwn-1769f/databases/(default)/documents/collections')\r\n    .then(response=>response.json()).then(collections=> console.log(collections));\r\n\r\n    this.unsubscribeFromSnapShot = collectionRef.get().then(snapshot => {\r\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\r\n      updateCollections(collectionsMap);\r\n      this.setState({loading : false});}\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route exact path={`${match.path}`} render={(props) => (<CollectionOverviewWithSpinner isLoading={loading} {...props}/>)}/>\r\n        <Route\r\n          path={`${match.path}/:collectionName`}\r\n          render={(props) => (<CollectionPageWithSpinner isLoading={loading} {...props}/>)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap =>\r\n    dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}