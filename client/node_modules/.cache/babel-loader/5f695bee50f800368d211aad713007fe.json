{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tony.fong\\\\source\\\\react-course\\\\crwn-clothing\\\\src\\\\page\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../../page/collection/collection.component\";\nimport { fetchCollectionsStartsAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionsFetching } from \"../../redux/shop/shop.selector\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const fetchCollectionsStartsAsync = this.props.fetchCollectionsStartsAsync;\n    fetchCollectionsStartsAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsFetching = _this$props.isCollectionsFetching;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionsFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionName\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionsFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectIsCollectionsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartsAsync: dispatch(fetchCollectionsStartsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\tony.fong\\source\\react-course\\crwn-clothing\\src\\page\\shop\\shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","WithSpinner","CollectionOverview","CollectionPage","fetchCollectionsStartsAsync","selectIsCollectionsFetching","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapShot","componentDidMount","props","render","match","isCollectionsFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AAEA,SAASC,2BAAT,QAA4C,+BAA5C;AACA,SAASC,2BAAT,QAA4C,gCAA5C;AAEA,MAAMC,6BAA6B,GAAGL,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMK,yBAAyB,GAAGN,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVT,2BADU,GACsB,KAAKU,KAD3B,CACVV,2BADU;AAElBA,IAAAA,2BAA2B;AAC5B;;AAEDW,EAAAA,MAAM,GAAG;AAAA,wBACkC,KAAKD,KADvC;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,qBADR,eACQA,qBADR;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEJ,KAAK,IACX,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKE,KAAK,CAACE,IAAX,qBADN;AAEE,MAAA,MAAM,EAAEJ,KAAK,IACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAiEH,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AAhCoC;;AAmCvC,MAAMK,eAAe,GAAGnB,wBAAwB,CAAC;AAC/CiB,EAAAA,qBAAqB,EAAEZ;AADwB,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,2BAA2B,EAAEiB,QAAQ,CAACjB,2BAA2B,EAA5B;AADC,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../../page/collection/collection.component\";\r\n\r\nimport { fetchCollectionsStartsAsync } from \"../../redux/shop/shop.actions\";\r\nimport { selectIsCollectionsFetching } from \"../../redux/shop/shop.selector\";\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n\r\n  unsubscribeFromSnapShot = null;\r\n\r\n  componentDidMount() {\r\n    const { fetchCollectionsStartsAsync } = this.props;\r\n    fetchCollectionsStartsAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match, isCollectionsFetching } = this.props;\r\n\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={props => (\r\n            <CollectionOverviewWithSpinner isLoading={isCollectionsFetching} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionName`}\r\n          render={props => (\r\n            <CollectionPageWithSpinner isLoading={isCollectionsFetching} {...props} />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionsFetching: selectIsCollectionsFetching\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStartsAsync: dispatch(fetchCollectionsStartsAsync())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}